{"ast":null,"code":"import _regeneratorRuntime from \"/home/torof/blockchain-developer-bootcamp-final-project/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/torof/blockchain-developer-bootcamp-final-project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/torof/blockchain-developer-bootcamp-final-project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/torof/blockchain-developer-bootcamp-final-project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/torof/blockchain-developer-bootcamp-final-project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/torof/blockchain-developer-bootcamp-final-project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/torof/blockchain-developer-bootcamp-final-project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/torof/blockchain-developer-bootcamp-final-project/client/src/components/pages/Lottery.jsx\";\nimport React from 'react';\nimport \"./styles/Pages.css\";\n\nvar LotteryPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LotteryPage, _React$Component);\n\n  function LotteryPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LotteryPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LotteryPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dailyWinners: [],\n      userDixelTickets: 0,\n      userStarmToWithdraw: 0,\n      userStarmBalance: 0,\n      userLotteryTickets: 0,\n      registeredTickets: 0,\n      value: 0\n    };\n\n    _this.componentDidMount = function () {\n      _this.setState(_this.updateAll);\n    };\n\n    _this.updateAll =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props, getterFacet, lotteryFacet, accounts, dailyWinners, lotteryTickets, dixelTickets, registeredTickets, starmToWithdraw, starmBalance;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, getterFacet = _this$props.getterFacet, lotteryFacet = _this$props.lotteryFacet, accounts = _this$props.accounts;\n              _context.next = 3;\n              return getterFacet.methods.returnLotteryWinners().call();\n\n            case 3:\n              dailyWinners = _context.sent;\n              _context.next = 6;\n              return getterFacet.methods.returnLotteryTickets().call({\n                from: accounts[0]\n              });\n\n            case 6:\n              lotteryTickets = _context.sent;\n              _context.next = 9;\n              return getterFacet.methods.returnFreeMintTickets().call({\n                from: accounts[0]\n              });\n\n            case 9:\n              dixelTickets = _context.sent;\n              _context.next = 12;\n              return getterFacet.methods.returnRegisteredTickets().call({\n                from: accounts[0]\n              });\n\n            case 12:\n              registeredTickets = _context.sent;\n              _context.next = 15;\n              return getterFacet.methods.returnStarmWon().call({\n                from: accounts[0]\n              });\n\n            case 15:\n              starmToWithdraw = _context.sent;\n              _context.next = 18;\n              return lotteryFacet.methods.balanceOfStarm(accounts[0]).call({\n                from: accounts[0]\n              });\n\n            case 18:\n              starmBalance = _context.sent;\n\n              _this.setState({\n                dailyWinners: dailyWinners,\n                userDixelTickets: dixelTickets,\n                registeredTickets: registeredTickets,\n                userStarmToWithdraw: starmToWithdraw,\n                userStarmBalance: starmBalance,\n                userLotteryTickets: lotteryTickets\n              });\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.buyTickets =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(amount) {\n        var _this$props2, lotteryFacet, accounts;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$props2 = _this.props, lotteryFacet = _this$props2.lotteryFacet, accounts = _this$props2.accounts;\n                _context2.next = 3;\n                return lotteryFacet.methods.buyTicket(amount).send({\n                  from: accounts[0]\n                }).catch(function (error) {\n                  if (error.code === 4001) {\n                    return alert(\"transaction rejected\");\n                  } else if (error.code === -32603) {\n                    if (error.message.includes(\"starm balance\")) {\n                      return alert(\"You don't have enough starm !\");\n                    } else return alert(\"internal error\");\n                  } else return error;\n                });\n\n              case 3:\n                _context2.next = 5;\n                return _this.updateAll();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.registerForLottery =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(amount) {\n        var _this$props3, lotteryFacet, accounts;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this$props3 = _this.props, lotteryFacet = _this$props3.lotteryFacet, accounts = _this$props3.accounts;\n                _context3.next = 3;\n                return lotteryFacet.methods.registerForLottery(amount).send({\n                  from: accounts[0]\n                }).catch(function (error) {\n                  if (error.code === 4001) alert(\"transaction rejected\");else if (error.code === -32603) {\n                    if (error.message.includes(\"not enough tickets\")) alert(\"You don't have enough tickets\");else return alert(\"internal error\");\n                  } else return console.log(error);\n                });\n\n              case 3:\n                _context3.next = 5;\n                return _this.updateAll();\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.startLottery =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var _this$props4, lotteryFacet, accounts;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this$props4 = _this.props, lotteryFacet = _this$props4.lotteryFacet, accounts = _this$props4.accounts;\n              _context4.next = 3;\n              return lotteryFacet.methods.startLottery().send({\n                from: accounts[0]\n              }).catch(function (error) {\n                if (error.code === 4001) alert(\"transaction rejected\");else if (error.code === -32603) {\n                  if (error.message.includes(\"not enough players\")) return alert(\"They're are not enough enough players yet\");else return alert(\"internal error\");\n                } else return console.log(error);\n              });\n\n            case 3:\n              _context4.next = 5;\n              return _this.updateAll();\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        value: event.target.value\n      });\n    };\n\n    _this.withdrawStarm =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var _this$props5, lotteryFacet, accounts;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _this$props5 = _this.props, lotteryFacet = _this$props5.lotteryFacet, accounts = _this$props5.accounts;\n              _context5.next = 3;\n              return lotteryFacet.methods.withdrawLotteryStarm().send({\n                from: accounts[0]\n              }).on(\"receipt\", function (receipt) {\n                var returnValues = receipt.events.StarmClaimed.returnValues;\n                console.log(returnValues);\n              }).catch(function (error) {\n                if (error.code === 4001) return alert(\"transaction rejected\");else if (error.code === -32603) {\n                  if (error.message.includes(\"no starm\")) alert(\"You don't have starm to withdraw\");else return alert(\"internal error\");\n                } else return console.log(error);\n              });\n\n            case 3:\n              _context5.next = 5;\n              return _this.updateAll();\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    return _this;\n  }\n\n  _createClass(LotteryPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Lottery tickets: \", this.state.userLotteryTickets), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Free Mint Tickets: \", this.state.userDixelTickets), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Registered Tickets: \", this.state.registeredTickets), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Starm to withdraw: \", this.state.userStarmToWithdraw)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"starm balance: \", this.state.userStarmBalance)), \"Lottery\", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"How many tickets would you like to buy ?:\", React.createElement(\"select\", {\n        value: this.state.numTickets,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        value: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        value: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"3\"), React.createElement(\"option\", {\n        value: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"4\"), React.createElement(\"option\", {\n        value: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"5\"), React.createElement(\"option\", {\n        value: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"10\"), React.createElement(\"option\", {\n        value: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"20\"), React.createElement(\"option\", {\n        value: 50,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"50\")), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.buyTickets(_this2.state.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Buy Ticket\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"How many tickets would you like to register ?:\", React.createElement(\"select\", {\n        value: this.state.numTickets,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        value: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        value: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"3\"), React.createElement(\"option\", {\n        value: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"4\"), React.createElement(\"option\", {\n        value: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"5\"), React.createElement(\"option\", {\n        value: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"10\"), React.createElement(\"option\", {\n        value: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"20\"), React.createElement(\"option\", {\n        value: 50,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"50\")), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.registerForLottery(_this2.state.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Register\"))), React.createElement(\"button\", {\n        onClick: this.startLottery,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Start lottery\"), React.createElement(\"button\", {\n        onClick: this.withdrawStarm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"WithdrawStarm\"), React.createElement(\"div\", {\n        className: \"card-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"daily winners:\", this.state.dailyWinners.slice(1, this.state.dailyWinners.length).map(function (e, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, \"at: \", e.timestamp), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \"free dixel winner: \", e.dixelMintWinner), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, \"Starm winner: \", e.starmWinner));\n      })));\n    }\n  }]);\n\n  return LotteryPage;\n}(React.Component);\n\nexport { LotteryPage as default };","map":{"version":3,"sources":["/home/torof/blockchain-developer-bootcamp-final-project/client/src/components/pages/Lottery.jsx"],"names":["React","LotteryPage","state","dailyWinners","userDixelTickets","userStarmToWithdraw","userStarmBalance","userLotteryTickets","registeredTickets","value","componentDidMount","setState","updateAll","props","getterFacet","lotteryFacet","accounts","methods","returnLotteryWinners","call","returnLotteryTickets","from","lotteryTickets","returnFreeMintTickets","dixelTickets","returnRegisteredTickets","returnStarmWon","starmToWithdraw","balanceOfStarm","starmBalance","buyTickets","amount","buyTicket","send","catch","error","code","alert","message","includes","registerForLottery","console","log","startLottery","handleChange","event","target","withdrawStarm","withdrawLotteryStarm","on","receipt","returnValues","events","StarmClaimed","numTickets","slice","length","map","e","i","timestamp","dixelMintWinner","starmWinner","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport \"./styles/Pages.css\"\n\nexport default class LotteryPage extends React.Component {\n        state = {\n            dailyWinners: [],\n            userDixelTickets: 0,\n            userStarmToWithdraw: 0,\n            userStarmBalance: 0,\n            userLotteryTickets: 0,\n            registeredTickets: 0,\n            value: 0\n        }\n\n        componentDidMount = () => {\n            this.setState(this.updateAll)\n        }\n\n        updateAll = async () => {\n            let {\n                getterFacet,\n                lotteryFacet,\n                accounts\n            } = this.props\n            let dailyWinners = await getterFacet.methods.returnLotteryWinners().call()\n            let lotteryTickets = await getterFacet.methods.returnLotteryTickets().call({\n                from: accounts[0]\n            })\n            let dixelTickets = await getterFacet.methods.returnFreeMintTickets().call({\n                from: accounts[0]\n            })\n            let registeredTickets = await getterFacet.methods.returnRegisteredTickets().call({\n                from: accounts[0]\n            })\n            let starmToWithdraw = await getterFacet.methods.returnStarmWon().call({\n                from: accounts[0]\n            })\n            let starmBalance = await lotteryFacet.methods.balanceOfStarm(accounts[0]).call({\n                from: accounts[0]\n            })\n\n            this.setState({\n                dailyWinners: dailyWinners,\n                userDixelTickets: dixelTickets,\n                registeredTickets: registeredTickets,\n                userStarmToWithdraw: starmToWithdraw,\n                userStarmBalance: starmBalance,\n                userLotteryTickets: lotteryTickets\n            })\n        }\n\n        buyTickets = async (amount) => {\n            let {\n                lotteryFacet,\n                accounts\n            } = this.props\n            await lotteryFacet.methods.buyTicket(amount).send({\n                from: accounts[0]\n            }).catch((error) => {\n                if(error.code === 4001){\n                    return alert(\"transaction rejected\")\n                } else if (error.code === -32603){\n                    if(error.message.includes(\"starm balance\")) {\n                        return alert(\"You don't have enough starm !\")\n                    } else return alert(\"internal error\")\n                } else return error\n            })\n            await this.updateAll()\n        }\n\n        registerForLottery = async (amount) => {\n            let {\n                lotteryFacet,\n                accounts\n            } = this.props\n            await lotteryFacet.methods.registerForLottery(amount).send({\n                from: accounts[0]\n            }).catch((error) => {\n                if(error.code === 4001) alert(\"transaction rejected\")\n                else if (error.code === -32603) {\n                    if(error.message.includes(\"not enough tickets\")) alert(\"You don't have enough tickets\")\n                    else return alert(\"internal error\")\n                } else return console.log(error)\n            })\n            await this.updateAll()\n        }\n\n        startLottery = async () => {\n            let {\n                lotteryFacet,\n                accounts\n            } = this.props\n            await lotteryFacet.methods.startLottery().send({\n                from: accounts[0]\n            })\n            .catch((error) => {\n                if(error.code === 4001) alert(\"transaction rejected\")\n                else if(error.code === -32603){\n                    if(error.message.includes(\"not enough players\")) return alert(\"They're are not enough enough players yet\")\n                    else return alert(\"internal error\")\n                } else return console.log(error)\n            })\n            await this.updateAll()\n        }\n\n        handleChange = (event) => {\n            this.setState({\n                value: event.target.value\n            });\n        }\n\n        withdrawStarm = async () => {\n            let {\n                lotteryFacet,\n                accounts\n            } = this.props;\n            await lotteryFacet.methods.withdrawLotteryStarm().send({\n                from: accounts[0]\n            })\n            .on(\"receipt\", (receipt) => {\n                let returnValues = receipt.events.StarmClaimed.returnValues\n                console.log(returnValues)\n            })\n            .catch((error) => {\n                if(error.code === 4001) return alert(\"transaction rejected\")\n                else if(error.code === -32603){\n                    if(error.message.includes(\"no starm\")) alert(\"You don't have starm to withdraw\")\n                    else return alert(\"internal error\")\n                } else return console.log(error)\n            })\n            await this.updateAll()\n        }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <div>Lottery tickets: {this.state.userLotteryTickets}</div>\n                    <div>Free Mint Tickets: {this.state.userDixelTickets}</div>\n                    <div>Registered Tickets: {this.state.registeredTickets}</div>\n                    <div>\n                        <p>Starm to withdraw: {this.state.userStarmToWithdraw}</p>\n                    </div>\n                    <div>starm balance: {this.state.userStarmBalance}</div>\n                </div>\n                Lottery\n\n                    <div>\n                    <label>\n                        How many tickets would you like to buy ?:\n                            <select value={this.state.numTickets} onChange={this.handleChange}>\n                            <option value={1}>1</option>\n                            <option value={2}>2</option>\n                            <option value={3}>3</option>\n                            <option value={4}>4</option>\n                            <option value={5}>5</option>\n                            <option value={10}>10</option>\n                            <option value={20}>20</option>\n                            <option value={50}>50</option>\n                        </select>\n                        <button onClick={() => this.buyTickets(this.state.value)}>Buy Ticket</button>\n                    </label>                        \n                    </div>\n                    <div>\n                    <label>\n                        How many tickets would you like to register ?:\n                            <select value={this.state.numTickets} onChange={this.handleChange}>\n                            <option value={1}>1</option>\n                            <option value={2}>2</option>\n                            <option value={3}>3</option>\n                            <option value={4}>4</option>\n                            <option value={5}>5</option>\n                            <option value={10}>10</option>\n                            <option value={20}>20</option>\n                            <option value={50}>50</option>\n                        </select>\n                        <button onClick={() => this.registerForLottery(this.state.value)}>Register</button>\n                    </label>                        \n                    </div>\n\n                <button onClick={this.startLottery}>Start lottery</button>\n                <button onClick={this.withdrawStarm}>WithdrawStarm</button>\n\n                <div className='card-list'>\n                    daily winners: \n                {this.state.dailyWinners.slice(1, this.state.dailyWinners.length).map((e, i) => \n                    <div key={i} className=\"card\">\n                        <p>at: {e.timestamp}</p>\n                        <p>free dixel winner: {e.dixelMintWinner}</p>\n                        <p>Starm winner: {e.starmWinner}</p>\n                    </div>\n                )}\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}